// Generated by IcedCoffeeScript 1.3.3f
(function() {
  var BUTTON_HTML, fetch_url, find_diff_url, main, previous_raw_link_base, url_unescape,
    __slice = [].slice;

  window.iced = {
    Deferrals: (function() {

      function _Class(_arg) {
        this.continuation = _arg;
        this.count = 1;
        this.ret = null;
      }

      _Class.prototype._fulfill = function() {
        if (!--this.count) return this.continuation(this.ret);
      };

      _Class.prototype.defer = function(defer_params) {
        var _this = this;
        ++this.count;
        return function() {
          var inner_params, _ref;
          inner_params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
          if (defer_params != null) {
            if ((_ref = defer_params.assign_fn) != null) {
              _ref.apply(null, inner_params);
            }
          }
          return _this._fulfill();
        };
      };

      return _Class;

    })(),
    findDeferral: function() {
      return null;
    }
  };
  window.__iced_k = window.__iced_k_noop = function() {};

  BUTTON_HTML = '<li><a href="#" class="sidebyside grouped-button minibutton bigger lighter" rel="nofollow">Side-by-Side</a></li>';

  fetch_url = function(url, cb) {
    return $.ajax(url, {
      success: function(data) {
        return cb(data);
      },
      error: function(a, b, c) {
        return cb("");
      }
    });
  };

  previous_raw_link_base = function(url) {
    var previous_ref, previous_user, repo, _, _ref;
    _ref = url.match(/(?:github.com|^)\/([^\/]+)\/.*?\/([^\/]+):([^\/]+)\.\.\.[^\/]+:[^\/]+/), _ = _ref[0], repo = _ref[1], previous_user = _ref[2], previous_ref = _ref[3];
    return "/" + previous_user + "/" + repo + "/raw/" + previous_ref;
  };

  find_diff_url = function() {
    var $diff_url;
    $diff_url = $('link[type="text/x-diff"]');
    if ($diff_url.length === 1) return $diff_url.attr('href');
    $diff_url = $('link[type="text/plain+diff"]');
    if ($diff_url.length === 1) return url_unescape($diff_url.attr('href'));
    return null;
  };

  url_unescape = function(url) {
    return unescape(url.replace(/&#x(..);/g, '%$1'));
  };

  main = function() {
    var change_set, diff_contents, diff_url, ___iced_passed_deferral, __iced_deferrals, __iced_k,
      _this = this;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    if ($('#files.diff-view').length === 0) return;
    diff_url = find_diff_url();
    if (!(diff_url != null)) return;
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        parent: ___iced_passed_deferral,
        filename: "main.iced",
        funcname: "main"
      });
      fetch_url(diff_url, __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            return diff_contents = arguments[0];
          };
        })(),
        lineno: 58
      }));
      __iced_deferrals._fulfill();
    })(function() {
      change_set = diff.parse_diff(diff.invert_diff(diff_contents));
      console.log(change_set);
      return $('.diff-view .file').each(function(_index, elem) {
        var $button, $button_group, $container, $diff_table, current_raw_path, file_url, relative_path;
        $button_group = $(elem).find('.button-group');
        file_url = $button_group.find('li a').first().attr('href');
        if (file_url === void 0) return;
        current_raw_path = file_url.replace("/blob/", "/raw/");
        relative_path = $(elem).find('.meta').data('path');
        $button = $(BUTTON_HTML);
        $diff_table = $(elem).find('.diff-table');
        $container = $diff_table.parent();
        $button.on('click', '.sidebyside', function(e) {
          var $content, current, parent, ___iced_passed_deferral1, __iced_deferrals, __iced_k,
            _this = this;
          __iced_k = __iced_k_noop;
          ___iced_passed_deferral1 = iced.findDeferral(arguments);
          e.preventDefault();
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral1,
              filename: "main.iced"
            });
            fetch_url(current_raw_path, __iced_deferrals.defer({
              assign_fn: (function() {
                return function() {
                  return current = arguments[0];
                };
              })(),
              lineno: 79
            }));
            __iced_deferrals._fulfill();
          })(function() {
            parent = diff.apply_changes(relative_path, change_set, current);
            if (parent === current) {
              $content = $('<div>Files are the same</div>');
            } else {
              $content = $(diff.jsdiff(parent, current));
            }
            $diff_table.detach();
            $container.append($content);
            return $(e.target).removeClass('sidebyside').addClass('normaldiff').text('Normal');
          });
        });
        $button.on('click', '.normaldiff', function(e) {
          e.preventDefault();
          $container.find('table.diff').remove();
          $container.append($diff_table);
          return $(e.target).removeClass('normaldiff').addClass('sidebyside').text('Side-by-Side');
        });
        return $button_group.prepend($button);
      });
    });
  };

  main();

}).call(this);
